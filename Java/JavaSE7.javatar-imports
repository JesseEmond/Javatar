//Based on Java SE7 (unconfirmed)
[
	{   //Checked
		"package": "java.applet",
		"interface": ["AppletContext", "AppletStub", "AudioClip"],
		"class": ["Applet"]
	}, {//Checked
		"package": "java.awt",
		"interface": ["ActiveEvent", "Adjustable", "Composite", "CompositeContext", "ItemSelectable", "KeyEventDispatcher", "KeyEventPostProcessor", "LayoutManager", "LayoutManager2", "MenuContainer", "Paint", "PaintContext", "PrintGraphics", "SecondaryLoop", "Shape", "Stroke", "Transparency"],
		"class": ["AlphaComposite", "AWTEvent", "AWTEventMulticaster", "AWTKeyStroke", "AWTPermission", "BasicStroke", "BorderLayout", "BufferCapabilities", "BufferCapabilities.FlipContents", "Button", "Canvas", "CardLayout", "Checkbox", "CheckboxGroup", "CheckboxMenuItem", "Choice", "Color", "Component", "ComponentOrientation", "Container", "ContainerOrderFocusTraversalPolicy", "Cursor", "DefaultFocusTraversalPolicy", "DefaultKeyboardFocusManager", "Desktop", "Dialog", "Dimension", "DisplayMode", "Event", "EventQueue", "FileDialog", "FlowLayout", "FocusTraversalPolicy", "Font", "FontMetrics", "Frame", "GradientPaint", "Graphics", "Graphics2D", "GraphicsConfigTemplate", "GraphicsConfiguration", "GraphicsDevice", "GraphicsEnvironment", "GridBagConstraints", "GridBagLayout", "GridBagLayoutInfo", "GridLayout", "Image", "ImageCapabilities", "Insets", "JobAttributes", "JobAttributes.DefaultSelectionType", "JobAttributes.DestinationType", "JobAttributes.DialogType", "JobAttributes.MultipleDocumentHandlingType", "JobAttributes.SidesType", "KeyboardFocusManager", "Label", "LinearGradientPaint", "List", "MediaTracker", "Menu", "MenuBar", "MenuComponent", "MenuItem", "MenuShortcut", "MouseInfo", "MultipleGradientPaint", "PageAttributes", "PageAttributes.ColorType", "PageAttributes.MediaType", "PageAttributes.OrientationRequestedType", "PageAttributes.OriginType", "PageAttributes.PrintQualityType", "Panel", "Point", "PointerInfo", "Polygon", "PopupMenu", "PrintJob", "RadialGradientPaint", "Rectangle", "RenderingHints", "RenderingHints.Key", "Robot", "Scrollbar", "ScrollPane", "ScrollPaneAdjustable", "SplashScreen", "SystemColor", "SystemTray", "TextArea", "TextComponent", "TextField", "TexturePaint", "Tookit", "TrayIcon", "Window"],
		"enum": ["Component.BaselineResizeBehavior", "Desktop.Action", "Dialog.ModalExclusionType", "Dialog.ModalityType", "GraphicsDevice.WindowTranslucency", "MultipleGradientPaint.ColorSpaceType", "MultipleGradientPaint.CycleMethod", "TrayIcon.MessageType", "Window.Type"],
		"exception": ["AWTException", "FontFormatException", "HeadlessException", "IllegalComponentStateException"],
		"error": ["AWTError"]
	}, {//Checked
		"package": "java.awt.color",
		"class": ["ColorSpace", "ICC_ColorSpace", "ICC_Profile", "ICC_ProfileGray", "ICC_ProfileRGB"],
		"exception": ["CMMException", "ProfileDataException"]
	}, {//Checked
		"package": "java.awt.datatransfer",
		"interface": ["ClipboardOwner", "FlavorListener", "FlavorMap", "FlavorTable", "Transferable"],
		"class": ["Clipboard", "DataFlavor", "FlavorEvent", "StringSelection", "SystemFlavorMap"],
		"exception": ["MimeTypeParseException", "UnsupportedFlavorException"]
	}, {
		"package": "java.awt.dnd",
		"interface": ["Autoscroll", "DragGestureListener", "DragSourceListener", "DragSourceMotionListener", "DropTargetListener"],
		"class": ["DnDConstants", "DragGestureEvent", "DragGestureRecognizer", "DragSource", "DragSourceAdapter", "DragSourceContext", "DragSourceDragEvent", "DragSourceDropEvent", "DragSourceEvent", "DropTarget", "DropTarget.DropTargetAutoScroller", "DropTargetAdapter", "DropTargetContext", "DropTargetDragEvent", "DropTargetDropEvent", "DropTargetEvent", "MouseDragGestureRecognizer"],
		"exception": ["InvalidDnDOperationException"]
	}, {
		"package": "java.awt.event",
		"interface": ["ActionListener", "AdjustmentListener", "AWTEventListener", "ComponentListener", "ContainerListener", "FocusListener", "HierachyBoundsListener", "HierachyListener", "InputMethodListener", "ItemListener", "KeyListener", "MouseListener", "MouseMotionListener", "MouseWheelListener", "TextListener", "WindowFocusListener", "WindowListener", "WindowStateListener"],
		"class": ["ActionEvent", "AdjustmentEvent", "AWTEventListenerProxy", "ComponentAdapter", "ComponentEvent", "ContainerAdapter", "ContainerEvent", "FocusAdapter", "FocusEvent", "HierachyBoundsAdapter", "HierachyEvent", "InputEvent", "InputMethodEvent", "InvocationEvent", "ItemEvent", "KeyAdapter", "KeyEvent", "MouseAdapter", "MouseEvent", "MouseMotionAdapter", "MouseWheelEvent", "PaintEvent", "TextEvent", "WindowAdapter", "WindowEvent"]
	}, {
		"package": "java.awt.font",
		"interface": ["MultipleMaster", "OpenType"],
		"class": ["FontRenderContext", "GlyphJustificationInfo", "GlyphMetrics", "GlyphVector", "GraphicAttribute", "ImageGraphicAttribute", "LayoutPath", "LineBreakMeasurer", "LineMetrics", "NumericShaper", "ShapeGraphicAttribute", "TextAttribute", "TextHitInfo", "TextLayout", "TextLayout.CaretPolicy", "TextMeasurer", "TransformAttribute"],
		"enum": ["NumericShaper.Range"]
	}, {
		"package": "java.awt.geom",
		"interface": ["PathIterator"],
		"class": ["AffineTransform", "Arc2D", "Arc2D.Double", "Arc2D.Float", "Area", "CubicCurve2D", "CubicCurve2D.Double", "CubicCurve2D.Flaot", "Dimension2D", "Ellipse2D", "Ellipse2D.Double", "Ellipse2D.Float", "FlatteningPathIterator", "GeneralPath", "Line2D", "Line2D.Double", "Line2D.Float", "Path2D", "Path2D.Double", "Path2D.Float", "QuadCurve2D", "QuadCurve2D.Double", "QuadCurve2D.Float", "Rectangle2D", "Rectangle2D.Double", "Rectangle2D.Float", "RectangularShape", "RoundRectangle2D", "RoundRectangle2D.Double", "RoundRectangle2D.Float"],
		"exception": ["IllegalPathStateException", "NoninvertibleTransformException"]
	}, {
		"package": "java.awt.im",
		"interface": ["InputMethodRequests"],
		"class": ["InputContext", "InputMethodHighlight", "InputSubset"]
	}, {
		"package": "java.awt.im.spi",
		"interface": ["InputMethod", "InputMethodContext", "InputMethodDescriptor"]
	}, {
		"package": "java.awt.image",
		"interface": ["BufferedImageOp", "ImageConsumer", "ImageObserver", "ImageProducer", "RasterOp", "RenderedImage", "TileObserver", "WritableRenderedImage"],
		"class": ["AffineTransformOp", "AreaAveragingScaleFilter", "BandConbineOp", "BandedSampleModel", "BufferedImage", "BufferedImageFilter", "BufferStrategy", "ByteLookupTable", "ColorConvertOp", "ColorModel", "ComponentColorModel", "ComponentSampleModel", "ConvolveOp", "CropImageFilter", "DataBuffer", "DataBufferByte", "DataBufferDouble", "DataBufferFloat", "DataBufferInt", "DataBufferShort", "DataBufferUShort", "DirectColorModel", "FilteredImageSource", "ImageFilter", "IndexColorModel", "Kernel", "LookupOp", "LookupTable", "MemoryImageSource", "MultiPixelPackedSampleModel", "PackedColorModel", "PixelGrabber", "PixelInterleavedSampleModel", "Raster", "ReplicateScaleFilter", "RescaleOp", "RGBImageFilter", "SampleModel", "ShortLookupTable", "SinglePixelPackedSampleModel", "VolatileImage", "WritableRaster"],
		"exception": ["ImagingOpException", "RasterFormatException"]
	}, {
		"package": "java.awt.image.renderable",
		"interface": ["ContextualRenderedImageFactory", "RenderableImage", "RenderedImageFactory"],
		"class": ["ParameterBlock", "RenderableImageOp", "RenderableImageProducer", "RenderContext"]
	}, {
		"package": "java.awt.print",
		"interface": ["Pageable", "Printable", "PrinterGraphics"],
		"class": ["Book", "PageFormat", "Paper", "PrinterJob"],
		"exception": ["PrinterAbortException", "PrinterException", "PrinterIOException"]
	}, {
		"package": "java.beans",
		"interface": ["AppletInitializer", "BeanInfo", "Customizer", "DesignMode", "ExceptionListener", "PropertyChangeListener", "PropertyEditor", "VetoableChangeListener", "Visibility"],
		"class": ["BeanDescriptor", "Beans", "DefaultPersistenceDelegate", "Encoder", "EventHandler", "EventSetDescriptor", "Expression", "FeatureDescriptor", "IndexedPropertyChangeEvent", "IndexedPropertyDescriptor", "Introspector", "MethodDescriptor", "ParameterDescriptor", "PersistenceDelegate", "PropertyChangeEvent", "PropertyChangeListenerProxy", "PropertyChangeSupport", "PropertyDescriptor", "PropertyEditorManager", "PropertyEditorSupport", "SimpleBeanInfo", "Statement", "VetoableChangeListenerProxy", "VetoableChangeSupport", "XMLDecoder", "XMLEncoder"],
		"exception": ["IntrospectionException", "PropertyVetoException"],
		"annotation": ["ConstructorProperties", "Transient"]
	}, {
		"package": "java.beans.beancontext",
		"interface": ["BeanContext", "BeanContextChild", "BeanContextChildComponentProxy", "BeanContextContainerProxy", "BeanContextMembershipListener", "BeanContextProxy", "BeanContextServiceProvider", "BeanContextServiceProviderBeanInfo", "BeanContextServiceRevokedListener", "BeanContextServices", "BeanContextServicesListener"],
		"class": ["BeanContextChildSupport", "BeanContextEvent", "BeanContextMembershipEvent", "BeanContextServiceAvailableEvent", "BeanContextServiceRevokedEvent", "BeanContextServicesSupport", "BeanContextServicesSupport.BCSSServiceProvider", "BeanContextSupport", "BeanContextSupport.BCSiterator"]
	}, {
		"package": "java.io",
		"interface": ["Closeable", "DataInput", "DataOutput", "Externalizable", "FileFilter", "FilenameFilter", "Flushable", "ObjectInput", "ObjectInputValidation", "ObjectOutput", "ObjectStreamConstants", "Serializable"],
		"class": ["BufferedInputStream", "BufferedOutputStream", "BufferedReader", "BufferedWriter", "ByteArrayInputStream", "ByteArrayOutputStream", "CharArrayReader", "CharArrayWriter", "Console", "DataInputStream", "DataOutputStream", "File", "FileDescriptor", "FileInputStream", "FileOutputStream", "FilePermission", "FileReader", "FileWriter", "FilterInputStream", "FilterOutputStream", "FilterReader", "FilterWriter", "InputStream", "InputStreamReader", "LineNumberInputStream", "LineNumberReader", "ObjectInputStream", "ObjectInputStream.GetField", "ObjectOutputStream", "ObjectOutputStream.PutField", "ObjectStreamClass", "ObjectStreamField", "OutputStream", "OutputStreamWriter", "PipedOutputStream", "PipedReader", "PipedWriter", "PrintStream", "PrintWriter", "PushbackInputStream", "PushbackReader", "RandomAccessFile", "Reader", "SequenceInputStream", "SerializablePermission", "StreanTokenizer", "StringBufferInputStream", "StringReader", "StringWriter", "Writer"],
		"exception": ["CharConversionException", "EOFException", "FileNotFoundException", "InterruptedIOException", "InvalidClassException", "InvalidObjectException", "IOException", "NotActiveException", "NotSerializableException", "ObjectStreamException", "OptionalDataException", "StreamCorruptedException", "SyncFailedException", "UnsupportedEncodingException", "UTFDataFormatException", "WriteAbortedException"],
		"error": ["IOError"]
	}, {
		// Default imports (no need to import)
		"default": true,
		"package": "java.lang",
		"interface": ["Appendable", "AutoCloseable", "CharSequence", "Cloneable", "Comparable", "Iterable", "Readable", "Runnable", "Thread.UncaughtExceptionHandler"],
		"class": ["ArrayList", "Boolean", "Byte", "Character", "Character.Subset", "Character.UnicodeBlock", "Class", "ClassLoader", "ClassValue", "Compiler", "Double", "Enum", "Float", "InheritableThreadLocal", "Integer", "Long", "Math", "Number", "Object", "Package", "Process", "ProcessBuilder", "ProcessBuilder.Redirect", "Runtime", "RuntimePermission", "SecurityManager", "Short", "StackTraceElement", "StrictMath", "String", "StringBuffer", "StringBuilder", "System", "Thread", "ThreadGroup", "ThreadLocal", "Throwable", "Void"],
		"enum": ["Character.UnicodeScript", "ProcessBuilder.Redirect.Type", "Thread.State"],
		"exception": ["ArithmeticException", "ArrayIndexOutOfBoundsException", "ArrayStoreException", "ClassCastException", "ClassNotFoundException", "CloneNotSupportedException", "EnumConstantNotPresentException", "Exception", "IllegalAccessException", "IllegalArgumentException", "IllegalMonitorStateException", "IllegalStateException", "IllegalThreadStateException", "IndexOutOfBoundsException", "InstantiationException", "InterruptedException", "NegativeArraySizeException", "NoSuchFieldException", "NoSuchMethodException", "NullPointerException", "NumberFormatException", "ReflectiveOperationException", "RuntimeException", "SecurityException", "StringIndexOutOfBoundsException", "TypeNotPresentException", "UnsupportedOperationException"],
		"error": ["AbstractMethodError", "AssertionError", "BootstrapMethodError", "ClassCircularityError", "ClassFormatError", "Error", "ExceptionInInitializerError", "IllegalAccessError", "IncompatibleClassChangeError", "InstantiationError", "InternalError", "LinkageError", "NoClassDefFoundError", "NoSuchFieldError", "NoSuchMethodError", "OutOfMemoryError", "StackOverflowError", "ThreadDeath", "UnknownError", "UnsatisfiedLinkError", "UnsupportedClassVersionError", "VerifyError", "VirtualMachineError"],
		"annotation": ["Deprecated", "Override", "SafeVararges", "SuppressWarnings"]
	}, {
		"package": "java.lang.annotation",
		"interface": ["Annotation"],
		"enum": ["ElementType", "RetentionPolicy"],
		"exception": ["AnnotationTypeMismatchException", "IncompleteAnnotationException"],
		"error": ["AnnotationFormatError"],
		"annotation": ["Documented", "Inherited", "Retention", "Target"]
	}, {
		"package": "java.lang.instrument",
		"interface": ["ClassFileTransformer"],
		"class": ["ClassDefinition"],
		"exception": ["IllegalClassFormatException", "UnmodifiableClassException"]
	}, {
		"package": "java.lang.invoke",
		"class": ["CallSite", "ConstantCallSite", "MethodHandle", "MethodHandleProxies", "MethodHandles", "MethodHandles.Loopup", "MethodType", "MutableCallSite", "SwitchPoint", "VolatileCallSite"],
		"exception": ["WrongMethodTypeException"]
	}, {
		"package": "java.lang.management",
		"interface": ["BufferPoolMXBean", "ClassLoadingMXBean", "CompilationMXBean", "GarbageCollectorMXBean", "MemoryManagerMXBean", "MemoryMXBean", "MemoryPoolMXBean", "OperatingSystemMXBean", "PlatformLoggingMXBean", "PlatformManagedMXBean", "RuntimeMXBean", "ThreadMXBean"],
		"class": ["LockInfo", "ManagementFactory", "ManagementPermission", "MemoryNotificationInfo", "MemoryUsage", "MonitorInfo", "ThreadInfo"],
		"enum": ["MemoryType"]
	}, {
		"package": "java.lang.ref",
		"class": ["PhantomReference", "Reference", "ReferenceQueue", "SoftReference", "WeakReference"]
	}, {
		"package": "java.lang.reflect",
		"interface": ["AnnotatedElement", "GenericArrayType", "GenericDeclaration", "InvocationHandler", "Member", "ParameterizedType", "Type", "TypeVariable", "WildcardType"],
		"class": ["AccessibleObject", "Array", "Constructor", "Field", "Method", "Modifier", "Proxy", "ReflectPermission"],
		"exception": ["InvocationTargetException", "MalformedParameterizedTypeException", "UndeclaredThrowableException"],
		"error": ["GenericSignatureFormatError"]
	}, {
		"package": "java.math",
		"class": ["BigDecimal", "BigInteger", "MathContext"],
		"enum": ["RoundingMode"]
	}, {
		"package": "java.net",
		"interface": ["ContentHandlerFactory", "CookiePolicy", "CookieStore", "DatagramSocketImplFactory", "FileNameMap", "ProtocolFamily", "SocketImplFactory", "SocketOption", "SocketOptions", "URLStreamHandlerFactory"],
		"class": ["Authenticator", "CacheRequest", "CacheResponse", "ContentHandler", "CookieHandler", "CookieManager", "DatagramPacket", "DatagramSocket", "DatagramSocketImpl", "HttpCookie", "HttpURLConnection", "IDN", "Inet4Address", "Inet6Address", "InetAddress", "InetSocketAddress", "InterfaceAddress", "JarURLConnection", "MulticastSocket", "NetPermission", "NetworkInterface", "PasswordAuthentication", "Proxy", "ProxySelector", "ResponseCache", "SecureCacheResponse", "ServerSocket", "Socket", "SocketAddress", "SocketImpl", "SocketPermission", "StandardSocketOptions", "URI", "URL", "URLClassLoader", "URLConnection", "URLDecoder", "URLEncoder", "URLStreamHandler"],
		"enum": ["Authenticator.RequestorType", "Proxy.Type", "StandardProtocolFamily"],
		"exception": ["BindException", "ConnectionException", "HttpRetryException", "MalformedURLException", "NoRouteToHostException", "PortUnreachableException", "ProtocolException", "SocketException", "SocketTimeoutException", "UnknownHostException", "UnknownServiceException", "URISyntaxException"]
	}, {
		"package": "java.nio",
		"class": ["Buffer", "ByteBuffer", "ByteOrder", "CharBuffer", "DoubleBuffer", "FloatBuffer", "IntBuffer", "LongBuffer", "MappedByteBuffer", "ShortBuffer"],
		"exception": ["BufferOverflowException", "BufferUnderflowException", "InvalidMarkException", "ReadOnlyBufferException"]
	}, {
		"package": "java.nio.channels",
		"interface": ["AsynchronousByteChannel", "AsynchronousChannel", "ByteChannel", "Channel", "CompletionHandler", "GatheringByteChannel", "InterruptibleChannel", "MulticastChannel", "NetworkChannel", "ReadableByteChannel", "ScatteringByteChannel", "SeekableByteChannel", "WritableByteChannel"],
		"class": ["AsynchronousChannelGroup", "AsynchronousFileChannel", "AsynchronousServerSocketChannel", "AsynchronousSocketChannel", "Channels", "DatagramChannel", "FileChannel", "FileChannel.MapMode", "FileLock", "MembershipKey", "Pipe", "Pipe.SinkChannel", "Pipe.SourceChannel", "SelectableChannel", "SelectionKey", "Selector", "ServerSocketChannel", "SocketChannel"],
		"exception": ["AcceptPendingException", "AlreadyBoundException", "AlreadyConnectedException", "AsynchronousCloseException", "CancelledKeyException", "ClosedByInterruptException", "ClosedChannelException", "ClosedSelectorException", "ConnectionPendingException", "FileLockInterruptionException", "IllegalBlockingModeException", "IllegalChannelGroupException", "IllegalSelectorException", "InterruptedByTimeoutException", "NoConnectionPendingException", "NonReadableChannelException", "NonWritableChannelException", "NotYetBoundException", "NotYetConnectedException", "OverlappingFileLockException", "ReadPendingException", "ShutdownChannelGroupException", "UnresolvedAddressException", "UnsupportedAddressTypeException", "WritePendingException"]
	}, {
		"package": "java.nio.channels.spi",
		"class": ["AbstractInterruptibleChannel", "AbstractSelectableChannel", "AbstractSelectionKey", "AbstractSelector", "AsynchronousChannelProvider", "SelectorProvider"]
	}, {
		"package": "java.nio.charset",
		"class": ["Charset", "CharsetDecoder", "CharsetEncoder", "CoderResult", "CodingErrorAction", "StandardCharsets"],
		"exception": ["CharacterCodingException", "IllegalCharsetNameException", "MalformedInputException", "UnmappableCharacterException", "UnsupportedCharsetException"],
		"error": ["CoderMalfunctionError"]
	}, {
		"package": "java.nio.charset.spi",
		"class": ["CharsetProvider"]
	}, {
		"package": "java.nio.file",
		"interface": ["CopyOption", "DirectoryStream", "DirectoryStream.Filter", "FileVisitor", "OpenOption", "Path", "PathMatcher", "SecureDirectoryStream", "Watchable", "WatchEvent", "WatchEvent.Kind", "WatchEvent.Modifier", "WatchKey", "WatchService"],
		"class": ["Files", "FileStore", "FileSystem", "FileSystems", "LinkPermission", "Paths", "SimpleFileVisitor", "StandardWatchEventKinds"],
		"enum": ["AccessMode", "FileVisitOption", "FileVisitResult", "LinkOption", "StandardCopyOption", "StandardOpenOption"],
		"exception": ["AccessDeniedException", "AtomicMoveNotSupportedException", "ClosedDirectoryStreamException", "ClosedFileSystemException", "ClosedWatchServiceException", "DirectoryIteratorException", "DirectoryNotEmptyException", "FileAlreadyExistsException", "FileSystemAlreadyExistsException", "FileSystemException", "FileSystemLoopException", "FileSystemNotFoundException", "InvalidPathException", "NoSuchFileException", "NotDirectoryException", "NotLinkException", "ProviderMismatchException", "ProviderNotFoundException", "ReadOnlyFileSystemException"]
	}, {
		"package": "java.nio.file.attribute",
		"interface": ["AclFileAttributeView", "AttributeView", "BasicFileAttributes", "BasicFileAttributeView", "DosFileAttributes", "DosFileAttributeView", "FileAttribute", "FileAttributeView", "FileOwnerAttributeView", "FileStoreAttributeView", "GroupPrincipal", "PosixFileAttributes", "PosixFileAttributeView", "UserDefinedFileAttributeView", "UserPrincipal"],
		"class": ["AclEntry", "AclEntry.Builder", "FileTime", "PosixFilePermissions", "UserPrincipalLookupService"],
		"enum": ["AclEntryFlag", "AclEntryPermission", "AclEntryType", "PosixFilePermission"],
		"exception": ["UserPrincipalNotFoundException"]
	}, {
		"package": "java.nio.file.spi",
		"class": ["FileSystemProvider", "FileTypeDetector"]
	}, {
		"package": "java.rmi",
		"interface": ["Remote"],
		"class": ["MarshalledObject", "Naming", "RMISecurityManager"],
		"exception": ["AccessException", "AlreadyBoundException", "ConnectException", "ConnectIOException", "MarshalException", "NoSuchObjectException", "NotBoundException", "RemoteException", "RMISecurityException", "ServerError", "ServerException", "StubNotFoundException", "UnexpectedException", "UnknownHostException", "UnmarshalException"]
	}, {
		"package": "java.rmi.activation",
		"interface": ["ActivationInstantiator", "ActivationMonitor", "ActivationSystem", "Activator"],
		"class": ["Activatable", "ActivationDesc", "ActivationGroup", "ActivationGroup_Stub", "ActivationGroupDesc", "ActivationGroupDesc.CommandEnvironment", "ActivationGroupID", "ActivationID"],
		"exception": ["ActivateFailedException", "ActivationException", "UnknownGroupException", "UnknownObjectException"]
	}, {
		"package": "java.rmi.dgc",
		"interface": ["DGC"],
		"class": ["Lease", "VMID"]
	}, {
		"package": "java.rmi.registry",
		"interface": ["Registry", "RegistryHandler"],
		"class": ["LocateRegistry"]
	}, {
		"package": "java.rmi.server",
		"interface": ["LoaderHandler", "RemoteCall", "RemoteRef", "RMIClientSocketFactory", "RMIFailureHandler", "RMIServerSocketFactory", "ServerRef", "Skeleton", "Unreferenced"],
		"class": ["LogStream", "ObjID", "Operation", "RemoteObject", "RemoteObjectInvocationHandler", "RemoteServer", "RemoteStub", "RMIClassLoader", "RMIClassLoaderSpi", "RMISocketFactory", "UID", "UnicastRemoteObject"],
		"exception": ["ExportException", "ServerCloneException", "ServerNotActiveException", "SkeletonMismatchException", "SkeletonNotFoundException", "SocketSecurityException"]
	}, {
		"package": "java.security",
		"interface": ["AlgorithmConstraints", "Certificate", "DomainCombiner", "Guard", "Key", "KeyStore.Entry", "KeyStore.LoadStoreParameter", "KeyStore.ProtectionParameter", "Policy.Parameters", "Principal", "PrivateKey", "PrivilegedAction", "PrivilegedExceptionAction", "PublicKey"],
		"class": ["AccessControlContext", "AccessController", "AlgorithmParameterGenerator", "AlgorithmParameterGeneratorSpi", "AlgorithmParameters", "AlgorithmParametersSpi", "AllPermission", "AuthProvider", "BasicPermission", "CodeSigner", "CodeSource", "DigestInputStream", "DigestOutputStream", "GuardedObject", "Identity", "IdentityScope", "KeyFactory", "KeyFactorySpi", "KeyPair", "KeyPairGenerator", "KeyPairGeneratorSpi", "KeyRep", "KeyStore", "KeyStore.Builder", "KeyStore.CallbackHandlerProtection", "KeyStore.PasswordProtection", "KeyStore.PrivateKeyEntry", "KeyStore.SecretKeyEntry", "KeyStore.TrustedCertificateEntry", "KeyStoreSpi", "MessageDigest", "MessageDigestSpi", "Permission", "PermissionCollection", "Permissions", "Policy", "PolicySpi", "ProtectionDomain", "Provider", "Provider.Service", "SecureClassLoader", "SecureRandom", "SecureRandomSpi", "Security", "SecurityPermission", "Signature", "SignatureSpi", "SignedObject", "Signer", "Timestamp", "UnresolvedPermission", "URIParameter"],
		"enum": ["CryptoPrimitive", "KeyRep.Type"],
		"exception": ["AccessControlException", "DigestException", "GeneralSecurityException", "InvalidAlgorithmParameterException", "InvalidKeyException", "InvalidParameterException", "KeyException", "KeyManagementException", "KeyStoreException", "NoSuchAlgorithmException", "NoSuchProviderException", "PrivilegedActionException", "ProviderException", "SignatureException", "UnrecoverableEntryException", "UnrecoverableKeyException"]
	}, {
		"package": "java.security.acl",
		"interface": ["Acl", "AclEntry", "Group", "Owner", "Permission"],
		"exception": ["AclNotFoundException", "LastOwnerException", "NotOwnerException"]
	}, {
		"package": "java.security.cert",
		"interface": ["CertPathBuilderResult", "CertPathParameters", "CertPathValidatorException.Reason", "CertPathValidatorResult", "CertSelector", "CertStoreParameters", "CRLSelector", "Extension", "PolicyNote", "X509Extension"],
		"class": ["Certificate", "Certificate.CertificateRep", "CertificateFactory", "CertificateFactorySpi", "CertPath", "CertPath.CertPathRep", "CertPathBuilder", "CertPathBuilderSpi", "CertStore", "CertStoreSpi", "CollectionCertStoreParameters", "CRL", "LDAPCertStoreParameters", "PKIXBuilderParameters", "PKIXCertPathBuilderResult", "PKIXCertPathChecker", "PKIXCertPathValidatorResult", "PKIXParameters", "PolicyQualifierInfo", "TrustAnchor", "X509Certificate", "X509CertSelector", "X509CRL", "X509CRLEntry", "X509CRLSelector"],
		"enum": ["CertPathValidatorException.BasicReason", "CRLReason", "PKIXReason"],
		"exception": ["CertificateEncodingException", "CertificateException", "CertificateExpiredException", "CertificateNotYetValidException", "CertificateParsingException", "CertificateRevokedException", "CertPathBuilderException", "CertPathValidatorException", "CertStoreException", "CRLException"]
	}, {
		"package": "java.security.interfaces",
		"interface": ["DSAKey", "DSAKeyPairGenerator", "DSAParams", "DSAPrivateKey", "DSAPublicKey", "ECKey", "ECPrivateKey", "ECPublicKey", "RSAKey", "RSAMultiPrimePrivateCrtKey", "RSAPrivateCrtKey", "RSAPrivateKey", "RSAPublicKey"]
	}, {
		"package": "java.security.spec",
		"interface": ["AlgorithmParameterSpec", "ECField", "KeySpec"],
		"class": ["DSAParameterSpec", "DSAPrivateKeySpec", "DSAPublicKeySpec", "ECFieldF2m", "ECFieldFp", "ECGenParameterSpec", "ECParameterSpec", "ECPoint", "ECPrivateKeySpec", "ECPublicKeySpec", "EllipticCurve", "EncodedKeySpec", "MGF1ParameterSpec", "PKCS8EncodedKeySpec", "PSSParameterSpec", "RSAKeyGenParameterSpec", "RSAMultiPrimePrivateCrtKeySpec", "RSAOtherPrimeInfo", "RSAPrivateCrtKeySpec", "RSAPrivateKeySpec", "RSAPublicKeySpec", "X509EncodedKeySpec"],
		"exception": ["InvalidKeySpecException", "InvalidParameterSpecException"]
	}, {
		"package": "java.sql",
		"interface": ["Array", "Blob", "CallableStatement", "Clob", "Connection", "DatabaseMetaData", "Driver", "NClob", "ParameterMetaData", "PreparedStatement", "Ref", "ResultSet", "ResultSetMetaData", "RowId", "Savepoint", "SQLData", "SQLInput", "SQLOutput", "SQLXML", "Statement", "Struct", "Wrapper"],
		"class": ["Date", "DriverManager", "DriverPropertyInfo", "SQLPermission", "Time", "Timestamp", "Types"],
		"enum": ["ClientInfoStatus", "PseudoColumnUsage", "RowIdLifetime"],
		"exception": ["BatchUpdateException", "DataTruncation", "SQLClientInfoException", "SQLDataException", "SQLException", "SQLFeatureNotSupportedException", "SQLIntegrityConstraintViolationException", "SQLInvalidAuthorizationSpecException", "SQLNonTransientConnectionException", "SQLNonTransientException", "SQLRecoverableException", "SQLSyntaxErrorException", "SQLTimeoutException", "SQLTransactionRollbackException", "SQLTransientConnectionException", "SQLTransientException", "SQLWarning"]
	}, {
		"package": "java.text",
		"interface": ["AttributedCharacterIterator", "CharacterIterator"],
		"class": ["Annotation", "AttributedCharacterIterator.Attribute", "AttributedString", "Bidi", "BreakIterator", "ChoiceFormat", "CollationElementIterator", "CollationKey", "Collator", "DateFormat", "DateFormat.Field", "DateFormatSymbols", "DecimalFormat", "DecimalFormatSymbols", "FieldPosition", "Format", "Format.Field", "MessageFormat", "MessageFormat.Field", "Normalizer", "NumberFormat", "NumberFormat.Field", "ParsePosition", "RuleBasedCollator", "SimpleDateFormat", "StringCharacterIterator"],
		"enum": ["Normalizer.Form"],
		"exception": ["ParseException"]
	}, {
		"package": "java.text.spi",
		"class": ["BreakIteratorProvider", "CollatorProvider", "DateFormatProvider", "DateFormatSymbolsProvider", "DecimalFormatSymbolsProvider", "NumberFormatProvider"]
	}, {
		"package": "java.util",
		"interface": ["Collection", "Comparator", "Deque", "Enumberation", "EventListener", "Formattable", "Iterator", "List", "ListIterator", "Map", "Map.Entry", "NavigableMap", "NavigableSet", "Observer", "Queue", "RandomAccess", "Set", "SortedMap", "SortedSet"],
		"class": ["AbstractCollection", "AbstractList", "AbstractMap", "AbstractMap.SimpleEntry", "AbstractMap.SimpleImmutableEntry", "AbstractQueue", "AbstractSequentialList", "AbstractSet", "ArrayDeque", "ArrayList", "Arrays", "BitSet", "Calendar", "Collections", "Currency", "Date", "Dictionary", "EnumMap", "EnumSet", "EventListenerProxy", "EventObject", "FormattableFlags", "Formatter", "GregorianCalendar", "HashMap", "HashSet", "Hashtable", "IdentityHashMap", "LinkedHashMap", "LinkedHashSet", "LinkedList", "ListResourceBundle", "Locale", "Locale.Builder", "Objects", "Observable", "PriorityQueue", "Properties", "PropertyPermission", "PropertyResourceBundle", "Random", "ResourceBundle", "ResourceBundle.Control", "Scanner", "ServiceLoader", "SimpleTimeZone", "Stack", "StringTokenizer", "Timer", "TimerTask", "TimeZone", "TreeMap", "TreeSet", "UUID", "Vector", "WeakHashMap"],
		"enum": ["Format.BigDecimalLayoutForm", "Locale.Category"],
		"exception": ["ConcurrentModificationException", "DuplicateFormatFlagsException", "EmptyStackException", "FormatFlagsConversionMismatchException", "FormatterClosedException", "IllegalFormatCodePointException", "IllegalFormatConversionException", "IllegalFormatException", "IllegalFormatFlagsException", "IllegalFormatPrecisionException", "IllegalFormatWidthException", "IllformedLocalException", "InputMismatchException", "InvalidPropertiesFormatException", "MissingFormatArgumentException", "MissingFormatWidthException", "MissingResourceException", "NoSuchElementException", "TooManyListenersException", "UnknownFormatConversionException", "UnknownFormatFlagsException"],
		"error": ["ServiceConfigurationError"]
	}, {
		"package": "java.util.concurrent",
		"interface": ["BlockingDeque", "BlockingQueue", "Callable", "CompletionService", "ConcurrentMap", "ConcurrentNavigableMap", "Delayed", "Executor", "ExecutorService", "ForkJoinPool.ForkJoinWorkerThreadFactory", "ForkJoinPool.ManagedBlocker", "Future", "RejectedExecutionHandler", "RunnableFuture", "RunnableScheduledFuture", "ScheduledExecutorService", "ScheduledFuture", "ThreadFactory", "TransferQueue"],
		"class": ["AbstractExecutorService", "ArrayBlockingQueue", "ConcurrentHashMap", "ConcurrentLinkedDeque", "ConcurrentLinkedQueue", "ConcurrentSkipListMap", "ConcurrentSkipListSet", "CopyOnWriteArrayList", "CopyOnWriteArraySet", "CountDownLatch", "CyclicBarrier", "DelayQueue", "Exchanger", "ExecutorCompletionService", "Executors", "ForkJoinPool", "ForkJoinTask", "ForkJoinWorkerThread", "FutureTask", "LinkedBlockingDeque", "LinkedBlockingQueue", "LinkedTransferQueue", "Phaser", "PriorityBlockingQueue", "RecursiveAction", "RecursiveTask", "ScheduledThreadPoolExecutor", "Semaphore", "SynchronousQueue", "ThreadLocalRandom", "ThreadPoolExecutor", "ThreadPoolExecutor.AbortPolicy", "ThreadPoolExecutor.CallerRunsPolicy", "ThreadPoolExecutor.DiscardOldestPolicy", "ThreadPoolExecutor.DiscardPolicy"],
		"enum": ["TimeUnit"],
		"exception": ["BrokenBarrierException", "CancellationException", "ExecutionException", "RejectedExecutionException", "TimeoutException"]
	}, {
		"package": "java.util.concurrent.atomic",
		"class": ["AtomicBoolean", "AtomicInteger", "AtomicIntegerArray", "AtomicIntegerFieldUpdater", "AtomicLong", "AtomicLongArray", "AtomicLongFieldUpdater", "AtomicMarkableReference", "AtomicReference", "AtomicReferenceArray", "AtomicReferenceFieldUpdater", "AtomicStampedReference"]
	}, {
		"package": "java.util.concurrent.locks",
		"interface": ["Condition", "Lock", "ReadWriteLock"],
		"class": ["AbstractOwnableSynchronizer", "AbstractQueuedLongSynchronizer", "AbstractQueueSynchronizer", "LockSupport", "ReentrantLock", "ReentrantReadWriteLock", "ReentrantReadWriteLock.ReadLock", "ReentrantReadWriteLock.WriteLock"]
	}, {
		"package": "java.util.jar",
		"interface": ["Pack200.Packer", "Pack200.Unpacker"],
		"class": ["Attributes", "Attributes.Name", "JarEntry", "JarFile", "JarInputStream", "JarOutputStream", "Manifest", "Pack200"],
		"exception": ["JarException"]
	}, {
		"package": "java.util.logging",
		"interface": ["Filter", "LoggingMXBean"],
		"class": ["ConsoleHandler", "ErrorManager", "FileHandler", "Formatter", "Handler", "Level", "Logger", "LoggingPermission", "LogManager", "LogRecord", "MemoryHandler", "SimpleFormatter", "SocketHandler", "StreamHandler", "XMLFormatter"]
	}, {
		"package": "java.util.perfs",
		"interface": ["NodeChangeListener", "PreferenceChangeListener", "PreferencesFactory"],
		"class": ["AbstractPreferences", "NodeChangeEvent", "PreferenceChangeEvent", "Preferences"],
		"exception": ["BackingStoreException", "InvalidPreferencesFormatException"]
	}, {
		"package": "java.util.regex",
		"interface": ["MatchResult"],
		"class": ["Matcher", "Pattern"],
		"exception": ["PatternSyntaxException"]
	}, {
		"package": "java.util.spi",
		"class": ["CurrencyNameProvider", "LocaleNameProvider", "LocaleServiceProvider", "TimeZoneNameProvider"]
	}, {
		"package": "java.util.zip",
		"interface": ["Checksum"],
		"class": ["Adier32", "CheckedInputStream", "CheckedOutputStream", "CRC32", "Deflater", "DeflaterInputStream", "DeflaterOutputStream", "GZIPInputStream", "GZIPOutputStream", "Inflater", "InflaterInputStream", "InflaterOutputStream", "ZipEntry", "ZipFile", "ZipInputStream", "ZipOutputStream"],
		"exception": ["DataFormatException", "ZipException"],
		"error": ["ZipError"]
	}
]