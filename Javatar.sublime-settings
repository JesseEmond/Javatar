{
	// Settings per project can be set in .sublime-project file

	// Debugging purpose:
	"debug_mode" : false,

	// Javatar general purpose value
	"javatar_gp": 0,

	// Package Subscription:
	//    dev = Developer release (contains new features, bugs and also debugging messages enabled)
	//    otherwise = Stable release (safe to use, only stable feature enabled)
	"package_channel" : "stable",

	// Automatically send statistics and usages informations
	"send_stats_and_usages" : true,

	// Update message id
	//    -1 = Unsubscribe to important package updates notification (you should check out the README file for any updates information)
	//    any other number = Assigned by package to show you proper updates message
	"message_id" : 0,

	// Enable Actions History to help developer solve the issue
	"enable_actions_history" : true,

	// Maximum waiting time for Javatar packages creation
	"maximum_waiting_time": 15,

	// Source folder (used as default package), must specified in full path
	// Default is...
	//    - Project-based source folder
	//    - Top most directory/folder
	//    - Current directory/folder
	"source_folder" : "",

	// Enable automatic save before build
	"automatic_save" : false,

	// Build command (based on default JavaC)
	// Command will be escaped properly before run
	"build_command" : ["javac", "$file"],

	// Default delay before hide a status text
	"status_delay" : 5000,

	// Show package path in status bar
	"show_package_path" : true,

	// Java file extensions
	"java_extensions" : ["java"],

	// Java source code validation using scope selector
	"java_source_selector" : "source.java",

	// Method call replacement pattern using RegEx (Use in completions)
	"method_replacement" : "\\(.*?\\)(?![,\\)])",

	// Package validation using RegEx
	"package_name_match" : "^([a-zA-Z_\\-$][a-zA-Z\\d_\\-$]*\\.)*[a-zA-Z_$][a-zA-Z\\d_$]*$",

	// Package matching using RegEx
	"package_match" : "^([a-zA-Z_\\-$][a-zA-Z\\d_\\-$]*\\.)*",

	// Class in package matching using RegEx
	"package_class_match" : "([a-zA-Z_$][a-zA-Z\\d_$]*)$",

	// Package scope selector (Use in Organize Imports)
	"package_meta_selector" : "meta.package.java",

	// Import scope selector (Use in Organize Imports)
	"import_meta_selector" : "meta.import.java",

	// Package in package keyword scope selector (Use in Organize Imports)
	"package_name_selector" : "storage.modifier.package.java",

	// Class name scope selector (Use in Organize Imports)
	"class_name_selector" : "entity.name.type.class.java",

	// Package in import keyword scope selector (Use in Organize Imports)
	"package_import_selector" : "storage.modifier.import.java",

	// Types and classes scope selector (Use in Organize Imports)
	"type_selector" : "storage.type.java|storage.type.generic.java|storage.type.annotation.java|entity.other.inherited-class",

	// Primitive types fallback (default Java syntax is not 100% syntax perfect)
	"primitive_type" : ["void", "boolean", "byte", "char", "short", "int", "float", "long", "double"]
}